learning>  sat and sun
doubt 
monday 8pm
wed:7pm

7 applications
1 Zomato (In Class)
1 Your Choice (Your Choice)  30%
1 Profile 10%

4 mini project (60% code complete) 10%

Tasks  ( I will provide) (6-8)  15%
Assignments ( Will upload edureka)  (8) 15%

20% Class performance

100%
100% Interview 
200%    

HTML > Raw Structure 
CSS > Looks and feels
Bootstrap > Responsive Design
Javascript > Add Dynmic to website
Nodes+Express > Backend of app (help to make API)
Mongo > Database (it will save all our data)
React > Frontend (display part of app)

MERN Stack

https://github.com/ > Signup(create account)    
https://www.linkedin.com/ > Create Account
https://stackoverflow.com/ > Create Account
https://code.visualstudio.com/ > install
https://git-scm.com/downloads > Install
https://nodejs.org/en/ > Install
https://github.com/Aakashdeveloper > Follow
https://www.youtube.com/developerfunnel > Subscribe

extensions
> vscode-icons
> spellCheck
> Githistory
> GitLens
> tabnine 


////////////
HTML > this is the main tag of the page
HEAD > All the links (css, javascript) (title,metatag)
BODY > All the content that is visible to user 


Inline Element
> Start in the same line
> Only take the space which is required
> a,img, span
Block Level Element
> Always Start from new line
> Take whole width of screen
> P, div, h1-h6


scr=> source
href=> hyper reffernce


Name
YourImage
About U
Skills
Hobbies
Map
Social Link
Copyright


>>> https://www.w3schools.com/tags/tag_hn.asp

SEO > search engine optimsation


//////
CSS > Cascase Style Sheet

inline Css
styleTag
StylesSheet

inline > styleTag > StylesSheet

inline{
    color:'red',
    text-align:'center'
}

styleTag
{
    color:'orange',
    font-size:'30';
    width:50%
}

StylesSheet
{
    width:40%;
    text-align:right;
    height:200px
}

{
    color:'red',
    text-align:'center',
    font-size:'30',
    width:50%,
    height:200px

}

https://htmlcolorcodes.com/

//// Target element ////////////////
Id 
> When you want target something unique
> #
ClassName
> When you want to target group to element for same properties
> .

TagName
> Help to target same elment by tag
a , p

solid
dotted
dashed
double
groove

position: absolute
position: relative


https://imgbb.com/

https://www.w3schools.com/howto/howto_css_parallax.asp

Bs3

xs < 768px
sm > 768px
md > 992px
lg > 1200px


Bs4
col- < 576px
sm > 576px
md > 768px
lg > 992px
xl > 1200px

Bs5

col- < 576px
sm > 576px
md > 768px
lg > 992px
xl > 1200px
xxl > 1400px


eval()

https://api.openweathermap.org/data/2.5/forecast/daily?q=london&mode=json&units=metric&cnt=5&appid=fbf712a5a83d7305c3cda4ca8fe7ef29


https://api.openweathermap.org/data/2.5/forecast/daily?lat=28.9891146&lon=77.0342236&mode=json&units=metric&cnt=5&appid=fbf712a5a83d7305c3cda4ca8fe7ef29


NodejS
> Node is a backend

> Single Threaded , async , non block I/O
> open source (anybody can contribute to development)
> npm (node package manager)

////////////////////////
2,196,136

/////package.json
> this is the entry point to applications
> it contains the metaData (name,version,description)
> All the pcakges we are using in app
> Script (start,build,test)


///step to create package.json
** NodeJs must be installed in your laptop
> go inside the folder using gitbash/cmd
> npm init
> Answer all questions
> Type "yes"

///step to install package
** NodeJs must be installed in your laptop
> go inside the folder using gitbash/cmd
> npm i packageName / npm install packageName

////////////
CRUD
C > Create (Post)
R > Read   (Get)
U > Update (Put)
D > Delete (Delete)


///Global
> Install in your laptop irrespective of any applications
> It is use to start application/ use before application start
> nodemon
> global package will not added in package.json

//////////Step to install global package
> open cmd as adminstrator
> npm i -g nodemon


////////////////////////////////////////////////////////////////
Params
> What we pass after /
> We need to define if we want to use it
> Should be use for passing 1 or 2 values

Queryparams
> What we pass after ?
> No need to define if we want to use it
> Should use for passing multiple values


/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
Step to generate React App
////////
> Go inside folder
> npx create-react-app appname (firstapp)


React
> Is javascript library
which help to build single page application
using component based structure

// run on port no. 3000
PS D:\EDUREKA\Full Stack\React Edureka\firstapp> npm start 

// routing5
PS D:\EDUREKA\Full Stack\React Edureka> npx create-react-app routing5

PS D:\EDUREKA\Full Stack\React Edureka\routing5> npm i react-router-dom@5.3.0

// routing6
PS D:\EDUREKA\Full Stack\React Edureka> npx create-react-app routing6

PS D:\EDUREKA\Full Stack\React Edureka\routing6> npm i react-router-dom

// Zomato app
PS D:\EDUREKA\Full Stack\React Edureka> npx create-react-app zomapp

// Start zomapp (Zomato app)
PS D:\EDUREKA\Full Stack\React Edureka\zomapp> npm start

// react-router-dom
PS D:\EDUREKA\Full Stack\React Edureka\zomapp> npm i react-router-dom@5.3.0 axios

// react-tabs
PS D:\EDUREKA\Full Stack\React Edureka\zomapp> npm i react-tabs

// import these two tabs for tabs from the link - https://www.npmjs.com/package/react-tabs
import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';
import 'react-tabs/style/react-tabs.css';

functional
> Dumb component
> Mainly use for display purpose
> Cannot maintain the state

class
> Logical Component
> Use logics as well as display
> Can maintain state


////////////////
hooks
> Alternate to class 
> Looks like functional component
> But can do all work of class component

///////////
State
> Act like a local variable
> Any data interaction will happen through state only
> We can update the value of state

Props
> Use to transfer data between 2 nested component
> we cannot update the value of props


parent > child (props)
child > parent (props with callback function)

(get) cityname >           http://3.17.216.66:4000/location
(get) restwrtcity >        http://3.17.216.66:4000/restaurant?stateId=1
(get) quickSearch>         http://3.17.216.66:4000/quicksearch


(get) onbasisofMeal >      http://3.17.216.66:4000/restaurant?mealtype_id=
(get) cuisinefilter >      http://3.17.216.66:4000/filter/4?cuisine=1
(get) costfilter >         http://3.17.216.66:4000/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://3.17.216.66:4000/details/1
(get) menu >               http://3.17.216.66:4000/menu/1

(post) orderspage >        http://3.17.216.66:4000/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         http://3.17.216.66:4000/restaurants

///////////////////////////////////////// start zomapp ////////////////////////////////////////////
/// step 1: opens React App on localhost:3000  ///
1. D:\EDUREKA\Full Stack\React Edureka\zomapp> npm start  

/// step 2: While Place Order we need to run payment gateway on port 4100. open paytm folder and go to terminal and run this: ///
2. D:\EDUREKA\Full Stack\NodeJS Edureka\Paytm> npm start

/// step 3: Placed orders will be displayed on this dummy port 1122 ///
3. D:\EDUREKA\Full Stack\React Edureka\zomapp>json-server --watch order.json --port 1122
////////////////////////////////////////////////////////////////////////////////////////////////////

dummy api
> open cmd as admin
> npm i -g json-server
> json-server --watch order.json --port 1122

// Exactly like this Follow this :
D:\EDUREKA\Full Stack\React Edureka\zomapp>npm i -g json-server

D:\EDUREKA\Full Stack\React Edureka\zomapp>json-server --watch order.json --port 1122


*GetAllUser/ (GET)> http://3.17.216.66:5000/api/auth/users

/*Register/ (POST)> http://3.17.216.66:5000/api/auth/register 
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/*Login/ (POST) => http://3.17.216.66:5000/api/auth/login 
(body) => {"email":"aa@gmail.com","password":"12345678"} (response)=> {auth:true,token:'dgsdg'}

/*UserInfo/ (GET) => http://3.17.216.66:5000/api/auth/userinfo (Header) => {'x-access-token':'token value from login'}


//////// step to make react app live ///////////////////////
> npm run build
// it will make the build of this application then after that :
> go to netlify.com and just sign up with github


///////////// How to make api live ?//////////////////

1. upload the code of rest api in separate repository.
2. Go to render.com
3. sign up with GitHub account
4. Create new+
5. Web Services
6. connect with github account
7. choose repo and connect and starts deploying and gives url.